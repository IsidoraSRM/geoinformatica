version: '3.8'

services:
  # PostgreSQL con PostGIS
  postgis:
    image: postgis/postgis:14-3.2-alpine
    container_name: clase04_postgis
    restart: unless-stopped
    environment:
      POSTGRES_USER: geouser
      POSTGRES_PASSWORD: geopass123
      POSTGRES_DB: geodata
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./sample_data.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geouser -d geodata"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - geo_network

  # Redis para caché
  redis:
    image: redis:7-alpine
    container_name: clase04_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - geo_network

  # pgAdmin para administrar PostGIS
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: clase04_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@clase04.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgis
    networks:
      - geo_network

  # Jupyter Lab con librerías geoespaciales
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: clase04_jupyter
    restart: unless-stopped
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN: "clase04"
      GRANT_SUDO: "yes"
      NB_USER: "jovyan"
      NB_UID: 1000
      NB_GID: 100
    ports:
      - "8888:8888"
    volumes:
      - ../notebooks:/home/jovyan/notebooks
      - ../data:/home/jovyan/data
      - ../src:/home/jovyan/src
    depends_on:
      - postgis
      - redis
    networks:
      - geo_network

  # Servidor de tiles (opcional)
  tileserver:
    image: maptiler/tileserver-gl:latest
    container_name: clase04_tileserver
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ../data/tiles:/data
    networks:
      - geo_network

  # Nominatim local (opcional, pesado ~4GB)
  # Descomenta si quieres geocoding local
  # nominatim:
  #   image: mediagis/nominatim:4.3
  #   container_name: clase04_nominatim
  #   restart: unless-stopped
  #   environment:
  #     PBF_URL: https://download.geofabrik.de/south-america/chile-latest.osm.pbf
  #     REPLICATION_URL: https://download.geofabrik.de/south-america/chile-updates/
  #     IMPORT_STYLE: street
  #   ports:
  #     - "8081:8080"
  #   volumes:
  #     - nominatim_data:/var/lib/postgresql/14/main
  #   shm_size: 1gb
  #   networks:
  #     - geo_network

networks:
  geo_network:
    driver: bridge
    name: clase04_network

volumes:
  postgres_data:
    name: clase04_postgres_data
  redis_data:
    name: clase04_redis_data
  pgadmin_data:
    name: clase04_pgadmin_data
  # nominatim_data:
  #   name: clase04_nominatim_data