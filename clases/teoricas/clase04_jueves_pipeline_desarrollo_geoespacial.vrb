\frametitle{Deployment en la nube}
\begin{columns}[T]
        \column{0.55\textwidth}
        \textbf{AWS - Terraform:}
        \begin{lstlisting}[language=HCL]
# RDS PostGIS
resource "aws_db_instance" "postgis" {
  engine         = "postgres"
  engine_version = "14.6"
  instance_class = "db.t3.micro"

  allocated_storage = 20
  storage_type     = "gp3"

  db_name  = "geodata"
  username = "geouser"
  password = var.db_password

  # Habilitar PostGIS
  enabled_cloudwatch_logs_exports = ["postgresql"]
}

# Lambda para procesamiento
resource "aws_lambda_function" "geo_processor" {
  function_name = "geo-processor"
  runtime      = "python3.9"
  handler      = "handler.main"

  layers = [
    "arn:aws:lambda:region:770693421928:layer:Klayers-p39-gdal:1"
  ]

  environment {
    variables = {
      DB_HOST = aws_db_instance.postgis.endpoint
    }
  }
}
        \end{lstlisting}

        \column{0.45\textwidth}
        \textbf{GitHub Actions CI/CD:}
        \begin{lstlisting}[language=yaml]
name: Deploy

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install GDAL
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin

    - name: Test
      run: |
        pip install -r requirements.txt
        pytest tests/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to server
      run: |
        ssh user@server "cd /app &&
                        git pull &&
                        docker-compose up -d"
        \end{lstlisting}
    \end{columns}
