\frametitle{Pipeline Completo con TorchGeo}
\begin{lstlisting}[language=Python,basicstyle=\tiny]
import torch
from torchgeo.datasets import EuroSAT
from torchgeo.models import ResNet50
from torchgeo.samplers import RandomGeoSampler
from torch.utils.data import DataLoader

# Dataset geoespacial
dataset = EuroSAT(root='data/', download=True)

# Sampler espacial
sampler = RandomGeoSampler(
    dataset,
    size=256,
    length=10000,
    roi=region_of_interest
)

# DataLoader
dataloader = DataLoader(
    dataset,
    batch_size=32,
    sampler=sampler,
    collate_fn=stack_samples
)

# Modelo preentrenado
model = ResNet50(weights='eurosat', num_classes=10)

# Fine-tuning
optimizer = torch.optim.Adam(model.parameters(), lr=0.001)
criterion = torch.nn.CrossEntropyLoss()

for epoch in range(num_epochs):
    for batch in dataloader:
        images = batch['image']
        labels = batch['label']

        outputs = model(images)
        loss = criterion(outputs, labels)

        optimizer.zero_grad()
        loss.backward()
        optimizer.step()
\end{lstlisting}
